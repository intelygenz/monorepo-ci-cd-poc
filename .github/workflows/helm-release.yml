name: Helm Release

on:
  workflow_run:
    workflows:
      - "Hello Component Build"
      - "ByeBye Component Build"
    types:
      - completed
  push:
    branches:
      - 'release/v*'


env:
  GITHUB_TOKEN: ${{ secrets.PATNAME }}


jobs:

  calculate-rc-tag:
    # Just after a workflow completes successfully and the workflows was triggered in main branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.rc_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a pre-release
        id: rc_tag
        uses: ./.github/actions
        with:
          current-major: 0
          prefix: "release/v"
          mode: 'pre-release'
          pre-release: 'rc'
          dry-run: true


  calculate-fix-tag:
    # Just after a workflow completes successfully and the workflows was triggered in a release branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      startsWith(github.event.workflow_run.head_branch, 'release')
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.fix_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a fix tag
        id: fix_tag
        uses: ./.github/actions
        with:
          prefix: "release/v"
          mode: 'fix'
          dry-run: true


  calculate-release-tag:
    if: startsWith(github.ref, 'refs/heads/release') # only in release branches
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get branch name
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Generate a release
        id: release_tag
        uses: ./.github/actions
        with:
          mode: 'release'
          release-branch: ${{ env.BRANCH }}
          dry-run: true


  release:
    if: |
      always() &&
      (needs.calculate-rc-tag.outputs.tag || needs.calculate-fix-tag.outputs.tag || needs.calculate-release-tag.outputs.tag)
    needs: [calculate-rc-tag, calculate-fix-tag, calculate-release-tag]
    runs-on: ubuntu-latest
    outputs:
      rc: needs.calculate-rc-tag.outputs.tag != null
      fix: needs.calculate-fix-tag.outputs.tag != null
      release: needs.calculate-release-tag.outputs.tag != null
    steps:
      - name: Checkout
        uses: actions/checkout@v2


  test:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - run: echo Test after release


  #create-rc-tag:
  #  needs: release
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
#
  #    - name: Generate a pre-release
  #      uses: ./.github/actions
  #      with:
  #        current-major: 0
  #        prefix: "release/v"
  #        mode: 'pre-release'
  #        pre-release: 'rc'
#

  #create-fix-tag:
  #  if: needs.release.outputs.fix
  #  needs: release
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
#
  #    - name: Generate a fix tag
  #      id: fix_tag
  #      uses: ./.github/actions
  #      with:
  #        prefix: "release/v"
  #        mode: 'fix'
#
#
  #create-release-tag:
  #  if: needs.release.outputs.release
  #  needs: release
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
#
  #    - name: Get branch name
  #      run: |
  #        echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
#
  #    - name: Generate a release
  #      id: release_tag
  #      uses: ./.github/actions
  #      with:
  #        mode: 'release'
  #        release-branch: ${{ env.BRANCH }}