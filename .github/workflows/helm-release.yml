name: Helm Release

on:
  workflow_run:
    workflows:
      - "Hello Component Build"
      - "ByeBye Component Build"
    types:
      - completed
  push:
    branches:
      - 'release/v*'


env:
  GITHUB_TOKEN: ${{ secrets.PATNAME }}


jobs:

  calculate-rc-tag:
    # Just after a workflow completes successfully and the workflows was triggered in main branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.rc_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a pre-release
        id: rc_tag
        uses: ./.github/actions
        with:
          current-major: 0
          prefix: "release/v"
          mode: 'pre-release'
          pre-release: 'rc'
          dry-run: true


  calculate-fix-tag:
    # Just after a workflow completes successfully and the workflows was triggered in a release branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      startsWith(github.event.workflow_run.head_branch, 'release')
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.fix_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a fix tag
        id: fix_tag
        uses: ./.github/actions
        with:
          prefix: "release/v"
          mode: 'fix'
          dry-run: true


  calculate-release-tag:
    if: startsWith(github.ref, 'refs/heads/release') # only in release branches
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get branch name
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Generate a release
        id: release_tag
        uses: ./.github/actions
        with:
          mode: 'release'
          release-branch: ${{ env.BRANCH }}
          dry-run: true


  release:
    if: |
      always() &&
      (needs.calculate-rc-tag.outputs.tag || needs.calculate-fix-tag.outputs.tag || needs.calculate-release-tag.outputs.tag)
    needs: [calculate-rc-tag, calculate-fix-tag, calculate-release-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }} # Checkout the branch in the original workflow

      - name: Hello Component Version
        id: hello_version
        uses: ./.github/actions
        with:
          prefix: "hello-"
          mode: 'component-get-last-version'

      - name: ByeBye Component Version
        id: byebye_version
        uses: ./.github/actions
        with:
          prefix: "byebye-"
          mode: 'component-get-last-version'

      - name: App Version
        id: get_version
        # When setting the version just one of the 3 vars will have a value
        run: |
          VERSION=${{needs.create-rc-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}${{needs.create-release-tag.outputs.tag}}
          RELEASE_VERSION=`echo "${VERSION}" | sed -e 's/v//g' | sed -e 's/-rc.*/.0/g'`
          echo ::set-output name=RELEASE_VERSION::${RELEASE_VERSION}
          echo ::set-output name=VERSION::${VERSION}

      - uses: chrisdickinson/setup-yq@latest
      - name: Replace component versions
        run: |
          # set image tags on kdl
          yq w -i metaapp/values.yaml 'helloWorld.tag' ${{ steps.hello_version.outputs.tag }}
          yq w -i metaapp/values.yaml 'byebyeWorld.tag' ${{ steps.byebye_version.outputs.tag }}

          # set app version and chart version for kdl
          yq w -i metaapp/Chart.yaml 'appVersion' --style=double ${{ steps.get_version.outputs.VERSION }}
          yq w -i metaapp/Chart.yaml 'version' ${{ steps.get_version.outputs.RELEASE_VERSION }}

          # debug output
          echo 'helloWorld.tag' ${{ steps.hello_version.outputs.tag }}
          echo 'byebyeWorld.tag' ${{ steps.byebye_version.outputs.tag }}
          echo 'appVersion' ${{ steps.get_version.outputs.VERSION }}
          echo 'version' ${{ steps.get_version.outputs.RELEASE_VERSION }}

      - name: Commit files
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -m "Update chart to version ${{ steps.get_version.outputs.RELEASE_VERSION }} [skip-ci]" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          branch: main

      # Publish Chart

  create-rc-tag:
    # Just after a workflow completes successfully and the workflows was triggered in main branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    needs: release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.rc_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a pre-release
        id: rc_tag
        uses: ./.github/actions
        with:
          current-major: 0
          prefix: "release/v"
          mode: 'pre-release'
          pre-release: 'rc'


  create-fix-tag:
    # Just after a workflow completes successfully and the workflows was triggered in a release branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      startsWith(github.event.workflow_run.head_branch, 'release')
    needs: release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.fix_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a fix tag
        id: fix_tag
        uses: ./.github/actions
        with:
          prefix: "release/v"
          mode: 'fix'


  create-release-tag:
    if: startsWith(github.ref, 'refs/heads/release') # only in release branches
    needs: release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get branch name
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Generate a release
        id: release_tag
        uses: ./.github/actions
        with:
          mode: 'release'
          release-branch: ${{ env.BRANCH }}