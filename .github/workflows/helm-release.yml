name: Helm Release

on:
  workflow_run:
    workflows:
      - "Hello Component Build"
      - "ByeBye Component Build"
    types:
      - completed
  create:


env:
  GITHUB_TOKEN: ${{ secrets.PATNAME }}


jobs:

  calculate-rc-tag:
    # Just after a workflow completes successfully and the workflows was triggered in main branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.rc_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a pre-release
        id: rc_tag
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          current-major: 0
          mode: 'product'
          type: 'pre-release'
          release-branch-prefix: "release/v"
          pre-release-name: 'rc'
          dry-run: true


  calculate-fix-tag:
    # Just after a workflow completes successfully and the workflows was triggered in a release branch
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      startsWith(github.event.workflow_run.head_branch, 'release')
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.fix_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a fix tag
        id: fix_tag
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          mode: 'product'
          type: 'fix'
          release-branch-prefix: "release/v"
          dry-run: true


  calculate-release-tag:
    if: startsWith(github.ref, 'refs/heads/release') # only in release branches
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get branch name
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Generate a release
        id: release_tag
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          mode: 'product'
          type: 'final'
          dry-run: true


  release:
    if: |
      always() &&
      (needs.calculate-rc-tag.outputs.tag || needs.calculate-fix-tag.outputs.tag || needs.calculate-release-tag.outputs.tag)
    needs: [calculate-rc-tag, calculate-fix-tag, calculate-release-tag]
    runs-on: ubuntu-latest
    outputs:
      rc: needs.calculate-rc-tag.outputs.tag != null
      fix: needs.calculate-fix-tag.outputs.tag != null
      release: needs.calculate-release-tag.outputs.tag != null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }} # Checkout the branch in the original workflow

      - name: Hello Component Version
        id: hello_version
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          component-prefix: "hello-"
          mode: 'query'
          type: 'component-last-version'

      - name: ByeBye Component Version
        id: byebye_version
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          component-prefix: "byebye-"
          mode: 'query'
          type: 'component-last-version'

      - name: App Version
        id: get_version
        # When setting the version just one of the 3 vars will have a value
        run: |
          CHART_VERSION=${{needs.calculate-rc-tag.outputs.tag}}${{needs.calculate-fix-tag.outputs.tag}}${{needs.calculate-release-tag.outputs.tag}}
          echo ::set-output name=CHART_VERSION::${CHART_VERSION}

      - uses: chrisdickinson/setup-yq@latest
      - name: Replace component versions
        run: |
          # set app version and chart version for kdl
          yq w -i metaapp/Chart.yaml 'version' ${{ steps.get_version.outputs.CHART_VERSION }}

          # debug output
          echo 'version' ${{ steps.get_version.outputs.CHART_VERSION }}

      - name: Commit files
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -m "Update chart to version ${{ steps.get_version.outputs.CHART_VERSION }} [skip-ci]" -a
          git push

      # Publish Chart


  create-rc-tag:
    if: always() && needs.calculate-rc-tag.outputs.tag
    needs: [release, calculate-rc-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a pre-release
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          mode: 'product'
          type: 'pre-release'
          release-branch-prefix: "release/v"
          current-major: 0
          pre-release-name: 'rc'


  create-fix-tag:
    if: always() && needs.calculate-fix-tag.outputs.tag
    needs: [release, calculate-fix-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a fix tag
        id: fix_tag
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          mode: 'product'
          type: 'fix'
          release-branch-prefix: "release/v"


  create-release-tag:
    if: always() && needs.calculate-release-tag.outputs.tag
    needs: [release, calculate-release-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate a release
        id: release_tag
        uses: intelygenz/monorepo-tagger-action@v1.0-rc.1
        with:
          mode: 'product'
          type: 'final'
